{"version":3,"sources":["webpack:///src/app/game/castle.ts","webpack:///src/app/character-bar/character-bar.component.html","webpack:///src/app/character-bar/character-bar.component.ts","webpack:///src/services/character.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/character-info/characterInfo.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/app/player.ts","webpack:///src/app/game/collisioneffect.ts","webpack:///src/app/level-select/level-select.component.ts","webpack:///src/app/level-select/level-select.component.html","webpack:///src/app/typeinfo/typeinfo.component.ts","webpack:///src/app/typeinfo/typeinfo.component.html","webpack:///src/app/game/unit.ts","webpack:///src/app/multiplayer/multiplayer.component.html","webpack:///src/app/multiplayer/multiplayer.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/services/game.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/team-info/team-info.component.ts","webpack:///src/app/team-info/team-info.component.html","webpack:///src/services/shopService.ts","webpack:///src/app/character-info/character-info.component.ts","webpack:///src/app/character-info/character-info.component.html","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/team-select/team-select.component.ts","webpack:///src/app/team-select/team-select.component.html","webpack:///src/app/cloud.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["Castle","x","y","team","side","health","maxHealth","dead","deffect","damage","drawDead","context","ctx","deadimg","Image","src","drawImage","defendEffect","img","draw","width","fillStyle","fillRect","healthText","Math","round","maxHealthText","font","fillText","data","parseCollisionEffect","CharacterBarComponent","characterServices","http","incomePrice","healthPrice","addCooldown","name","document","getElementById","style","display","removeCooldown","getIncomePriceAsync","shopServices","getNewIncomePrice","id","getHealthPriceAsync","getNewHealthPrice","classList","add","initBar","onmouseup","buy","fullTeam","teamMap","get","currentchar","i","getPrice","charprice","charhtml","getElementsByClassName","innerHTML","addEventListener","e","selector","templateUrl","styleUrls","encapsulation","None","CharacterService","apiURL","toPromise","providedIn","environment","production","CharacterInfo","constructAsync","getInfo","console","log","type","backgroundColor","speed","charAt","toUpperCase","substring","description","WelcomeComponent","loggedIn","draw_background","nextCloud","floor","random","clouds","push","background","forEach","cloud","setTimeout","modal","open","close","canvas","getContext","onclick","window","event","target","Player","money","income","castle","parseCastle","CollisionEffect","stance","collisionType","color","icon","attackEffect","LevelSelectComponent","gameServices","router","checkGame","updateTeam","getLevelID","navigate","levels","length","level","Number","innerText","remove","TypeinfoComponent","Unit","size","aeffect","equals","obj","sprite","currentHealth","units","MultiplayerComponent","allIDsandStates","gameIDs","updateGamesAsync","getAllGameIDsAndStates","jsonData","Object","keys","setId","value","getNewId","tryId","newGame","joinGame","alert","instructionModal","browserModal","instructionOpen","browserOpen","instructionClose","browserClose","onchange","AppComponent","setupTeamMap","getTeam","set","Map","GameService","player","AppModule","HTMLCanvasElement","declarations","imports","providers","bootstrap","TeamInfoComponent","currentTeam","currentUnits","ShopService","unit","CharacterInfoComponent","route","character","next","prev","paramMap","subscribe","map","mapParams","params","index","indexOf","GameComponent","gameResult","player1Stats","TotalIncome","Item1","Item2","UnitsBought","FavoriteUnit","MostKills","MostDamage","MostCastleDamage","player2Stats","player1FavoriteUnitIcon","player1MostKillsIcon","player1MostDamageIcon","player1MostCastleDamageIcon","player2FavoriteUnitIcon","player2MostKillsIcon","player2MostDamageIcon","player2MostCastleDamageIcon","init","start","waitForPlayer2","player2","play","requestAnimationFrame","reset","player1","Array","connectedPlayer","connection","withUrl","build","then","invoke","on","unitData","parseUnits","playerData","updatePlayer","getPlayerStats","onclose","end","menuButton","stop","characterbar","connected","TeamSelectComponent","teams","Cloud","image","routes","path","component","AppRoutingModule","forRoot","exports","routingComponents","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { CollisionEffect } from './collisioneffect';\r\n\r\nexport class Castle {  \r\n  x: number;\r\n  y: number;\r\n  damage: number = 0;\r\n  team: string;\r\n  side: number;\r\n\r\n  health: number;\r\n  maxHealth: number;\r\n  dead: boolean;\r\n\r\n  img: HTMLImageElement;\r\n\r\n  defendEffect: CollisionEffect;\r\n\r\n  constructor(x: number, y: number, team: string, side: number, health = 100, maxHealth = 100, dead = false, deffect?: CollisionEffect) { \r\n    this.x = x;\r\n    this.y = y;\r\n    this.team = team;\r\n    this.side = side;\r\n    this.health = health;\r\n    this.maxHealth = maxHealth;\r\n    this.dead = dead;\r\n\r\n    this.defendEffect = deffect;\r\n\r\n    this.img = new Image();\r\n    this.img.src = \"../assets/img/castles/\" + team + \" castle.png\";\r\n  }\r\n\r\n  public draw(context) {\r\n    if (this.health <= 0) {\r\n      this.drawDead(context);\r\n      return;\r\n    }\r\n\r\n    this.defendEffect.draw(context, this.x, this.y);\r\n\r\n    var ctx = context;\r\n    let x = this.x;\r\n    let y = this.y;\r\n\r\n    ctx.drawImage(this.img, x, y);\r\n    let width = 200 * (this.health/this.maxHealth);\r\n    if (width < 0)\r\n      width = 0;\r\n    \r\n    if (width > 75)\r\n      context.fillStyle = \"green\";\r\n    else if (width > 30)\r\n      context.fillStyle = \"yellow\";\r\n    else if (width > 10)\r\n      context.fillStyle = \"red\";\r\n    else\r\n      context.fillStyle = \"darkred\";\r\n\r\n    context.fillRect(this.x, this.y - 10, width, 5);\r\n\r\n    let healthText = Math.round(this.health);\r\n    let maxHealthText = Math.round(this.maxHealth);\r\n    ctx.font = \"10px serif\";\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillText(healthText + \"/\" + maxHealthText, this.x + 85, this.y - 15);\r\n  }\r\n\r\n  public drawDead = (context) => {\r\n    var ctx = context;\r\n    var deadimg = new Image();\r\n    deadimg.src = \"../assets/img/castles/dead castle.png\";\r\n    \r\n    let x = this.x;\r\n    let y = this.y;\r\n    ctx.drawImage(deadimg, x, y);\r\n  }\r\n\r\n  public static parseCastle(data): Castle {   \r\n    return new Castle(\r\n      (data.side == 1) ? 50 : 1250,\r\n      250,\r\n      data.team,\r\n      data.side,\r\n      data.health,\r\n      data.maxHealth,\r\n      data.dead,\r\n      CollisionEffect.parseCollisionEffect(data.defendEffect)\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"side<3; else spectate\">\r\n    <div id=\"income\">\r\n        Increase Income:<br/>\r\n        ${{ incomePrice }}\r\n    </div>\r\n    <div id=\"character-bar\" style=\"display: inline-block;\">\r\n        <!-- Dynamic Character icons go here -->\r\n        <div class=\"character first\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 316px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 426px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 536px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 646px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 756px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 866px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 976px;\"></div>\r\n        <div class=\"character\"></div>\r\n        <div class=\"cooldown\" style=\"top: 10px; left: 1086px;\"></div>\r\n    </div>\r\n    <div id=\"health\">\r\n        Increase Castle Health:<br/>\r\n        ${{ healthPrice }}\r\n    </div>\r\n</div>\r\n<ng-template #spectate>\r\n    <div id=\"spectate\">\r\n        Spectating Game\r\n    </div>\r\n</ng-template>","import { Component, Input, ViewEncapsulation, OnInit, AfterViewInit } from '@angular/core';\r\nimport { CharacterService } from '../../services/character.service'; \r\nimport { AppComponent } from '../app.component';\r\nimport { ShopService } from '../../services/shopService';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-character-bar',\r\n  templateUrl: './character-bar.component.html',\r\n  styleUrls: ['./character-bar.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class CharacterBarComponent implements OnInit, AfterViewInit {\r\n  @Input('side') side: number;\r\n  @Input('team') team: string;\r\n  @Input('id') id: number;\r\n\r\n  static shopServices: ShopService;\r\n\r\n  incomePrice: number = -1;\r\n  healthPrice: number = -1;\r\n\r\n  constructor(private characterServices: CharacterService, private http: HttpClient) { }\r\n\r\n  ngOnInit () {\r\n    \r\n  }\r\n  ngAfterViewInit() {\r\n    if (this.side >= 3)\r\n      return;\r\n\r\n    document.getElementById(\"character-bar\").classList.add(this.team);\r\n\r\n    CharacterBarComponent.shopServices = new ShopService(this.http);\r\n    this.initBar();\r\n\r\n    document.getElementById(\"income\").onmouseup = async() => {\r\n      await CharacterBarComponent.shopServices.buy(this.id, this.side, \"income\");\r\n      this.incomePrice = await CharacterBarComponent.shopServices.getNewIncomePrice(this.id, this.side);\r\n    }\r\n    document.getElementById(\"health\").onmouseup = async() => {\r\n      await CharacterBarComponent.shopServices.buy(this.id, this.side, \"health\");\r\n      this.healthPrice = await CharacterBarComponent.shopServices.getNewHealthPrice(this.id, this.side);\r\n    }\r\n  }\r\n\r\n  async initBar() {\r\n    var fullTeam = AppComponent.teamMap.get(this.team); \r\n    \r\n    for (var i = 0; i < 8; i++) {\r\n      let currentchar = fullTeam[i];\r\n      let charprice = await this.characterServices.getPrice(this.team, currentchar);\r\n      \r\n      let charhtml = \"<label class='price\";\r\n      if (this.team == \"black\") \r\n        charhtml += \" black-unit\";\r\n      charhtml += \"'>$\" + charprice + \"</label><img src='../../assets/img/icons/\" + currentchar + \" icon.png'>\";\r\n\r\n      document.getElementsByClassName(\"character\")[i].innerHTML += charhtml;\r\n      document.getElementsByClassName(\"cooldown\")[i].id = currentchar + \"cooldown\";\r\n      document.getElementsByClassName(\"character\")[i].addEventListener(\"mouseup\", (e) => {\r\n        CharacterBarComponent.shopServices.buy(this.id, this.side, currentchar);\r\n      });\r\n    }\r\n\r\n    this.getIncomePriceAsync();\r\n    this.getHealthPriceAsync();\r\n  }\r\n\r\n  addCooldown = (name) => {\r\n    document.getElementById(name+\"cooldown\").style.display = \"inline-block\";\r\n  }\r\n  removeCooldown = (name) => {\r\n    document.getElementById(name+\"cooldown\").style.display = \"none\";\r\n  }\r\n\r\n  getIncomePriceAsync = async() => {\r\n    this.incomePrice = await CharacterBarComponent.shopServices.getNewIncomePrice(this.id, this.side);\r\n  }\r\n  getHealthPriceAsync = async() => {\r\n    this.healthPrice = await CharacterBarComponent.shopServices.getNewHealthPrice(this.id, this.side);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CharacterService {\r\n  constructor(private http: HttpClient) {\r\n    this.http = http;\r\n  }\r\n\r\n  public getCharacter(team: string, name: string): Promise<string> {\r\n    return this.http.get<string>(environment.apiURL + 'api/characters/getcharacter/' + team + '/' + name).toPromise();\r\n  }\r\n\r\n  public getPrice(team: string, name: string): Promise<number> {\r\n    return this.http.get<number>(environment.apiURL + 'api/characters/getprice/' + team + '/' + name).toPromise();\r\n  }\r\n\r\n  public getTeam(team: string): Promise<string[]> {\r\n    return this.http.get<string[]>(environment.apiURL + 'api/characters/getteam/' + team).toPromise();\r\n  }\r\n\r\n  public getInfo(team: string, name: string) {\r\n    return this.http.get<number>(environment.apiURL + 'api/characters/getinfo/' + team + '/' + name).toPromise();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURL: 'https://localhost:44364/'\r\n};\r\n","import { CharacterService } from '../../services/character.service';\r\n\r\nexport class CharacterInfo {\r\n    health: number;\r\n    damage: number;\r\n    type: string;\r\n    speed: number;\r\n    team: string;\r\n    name: string;\r\n    description: string;\r\n\r\n    constructor(team: string, name: string, private characterServices: CharacterService) {\r\n        if (name == \"unknown\") {\r\n            this.health = 0;\r\n            this.damage = 0;\r\n            this.type = \"-\";\r\n            this.speed = 0;\r\n            this.team = \"-\";\r\n            this.name = \"Loading...\";\r\n            this.description = \"...\";\r\n        } else\r\n            this.constructAsync(team, name);\r\n    }\r\n\r\n    constructAsync = async(team: string, name: string) => {\r\n        var data = await <any>this.characterServices.getInfo(team, name);\r\n        console.log(data);\r\n        this.health = data.health;\r\n        this.damage = data.damage;\r\n        this.type = data.type;\r\n        document.getElementById(\"damage-type\").style.backgroundColor = this.type;\r\n        this.speed = data.speed;\r\n        this.team = team;\r\n        this.name = name.charAt(0).toUpperCase() + name.substring(1);\r\n        this.description = data.description;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\nimport { User } from '../user';\r\nimport { Cloud } from '../cloud';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent implements OnInit {\r\n  loggedIn = false;\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  background: HTMLImageElement;\r\n  clouds: Cloud[];\r\n  nextCloud: number;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    var modal = document.getElementById(\"instruction-modal\");\r\n    var open = document.getElementById(\"instructions\");\r\n    var close = <HTMLElement>document.getElementsByClassName(\"close\")[0];\r\n\r\n    this.canvas = <HTMLCanvasElement> document.getElementById(\"background-canvas\");\r\n    this.context = this.canvas.getContext(\"2d\");\r\n\r\n    this.background = new Image();\r\n    this.background.src = \"../../assets/img/background/background default.png\";\r\n\r\n    this.clouds = [\r\n      new Cloud(100),\r\n      new Cloud(600),\r\n      new Cloud(900),\r\n      new Cloud(1300),\r\n    ];\r\n    this.nextCloud = Math.floor(Math.random() * 25);\r\n\r\n    open.onclick = function() {\r\n      modal.style.display = \"block\";\r\n    }\r\n\r\n    close.onclick = function() {\r\n      modal.style.display = \"none\";\r\n    }\r\n\r\n    window.onclick = function(event) {\r\n      if (event.target == modal) {\r\n          modal.style.display = \"none\";\r\n      }\r\n    }\r\n    \r\n    this.draw_background();\r\n\r\n    // LOGIN LOGIC VVV\r\n    /*document.getElementById(\"login-button\").addEventListener(\"click\", async () => {\r\n      let username = (<any>document.getElementById(\"username\")).value;\r\n      let password = (<any>document.getElementById(\"password\")).value;\r\n\r\n      let tempData = await AppComponent.userServices.Login(username, password);\r\n      AppComponent.user = User.parseUser(tempData);\r\n\r\n      if (AppComponent.user.name != \"new_user\") {\r\n        this.loggedIn = true;\r\n        document.getElementById(\"login\").innerHTML = \"\";\r\n        document.getElementById(\"user-info\").innerHTML = \"Logged in as: \" + AppComponent.user.name;\r\n      }\r\n    });*/\r\n  }\r\n\r\n  draw_background = () => {\r\n    if (this.nextCloud > 0)\r\n      this.nextCloud--;\r\n    else {\r\n      this.nextCloud = Math.floor(Math.random() * 40);\r\n      this.clouds.push(new Cloud());\r\n    }\r\n    \r\n    this.context.drawImage(this.background, 0, 0);\r\n\r\n    if (typeof this.clouds != 'undefined')\r\n      this.clouds.forEach((cloud) => {\r\n        cloud.draw(this.context);\r\n      });\r\n\r\n    setTimeout(this.draw_background, 100);\r\n  }\r\n}","<canvas id=\"background-canvas\" width=\"1500\" height=\"500\"></canvas>\r\n<div id=\"main-view\">\r\n    <h1>The Great Castle Defense Game!</h1>\r\n    <h2>Choose Your Game Mode:</h2>\r\n    <div id=\"main-button-container\">\r\n        <button routerLink='levelselect' id=\"sp\">Singleplayer</button>\r\n        <button routerLink='multiplayer' id=\"mp\">Multiplayer</button>\r\n    </div>\r\n</div>\r\n<div id=\"footer\">\r\n    <div id=\"footer-button-container\">\r\n        <button id=\"instructions\">Instructions</button>\r\n        <button routerLink='teaminfo' id=\"character-stats\">Character Stats</button>\r\n        <button routerLink='typeinfo' id=\"type-effects\">Damage Type Info</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Instructions Modal -->\r\n<div id=\"instruction-modal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <span class=\"close\">&times;</span>\r\n        <h1 class=\"modal-header\">Instructions:</h1>\r\n        <p>This is a castle defense game, the aim of the game is to power up and purchase units to attack the enemy castle while keeping your own castle safe!</p>\r\n        <br/>\r\n        <p>Different units attack with different types of damage. Damage may be increased or decreased based on the team of the recipient of the damage!</p>\r\n        <br/>\r\n        <h1 class=\"modal-header\">Singleplayer:</h1>\r\n        <p>Choose your favorite team and battle against a variety of opponents in 8 different levels who will send units at you in a pre-defined pattern!</p>\r\n        <p>Be careful though! The levels get difficult very quickly!</p>\r\n        <br/>\r\n        <h1 class=\"modal-header\">Multiplayer:</h1>\r\n        <p>Pit your best strategies against your friends in a 2-player battle!</p>\r\n        <p>Create a new game and you will be assigned a random Game ID!</p>\r\n        <p>Once you have your ID, your friend will be able to join your game by typing in the ID, or selecting it from the game browser!</p>\r\n        <p>When the game is filled the battle begins!</p>\r\n    </div>\r\n</div>\r\n<!--\r\n<div id=\"login\">\r\n    <h2>Login: </h2>\r\n    <div class=\"container\" id=\"test\">\r\n        <label for=\"uname\"><b>Username</b></label>\r\n        <input type=\"text\" id=\"username\" placeholder=\"Enter Username\" name=\"uname\" required>\r\n\r\n        <label for=\"psw\"><b>Password</b></label>\r\n        <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" name=\"psw\" required>\r\n\r\n        <button type=\"submit\" id=\"login-button\">Login</button>\r\n    </div>\r\n</div>\r\n<div id=\"user-info\">\r\n    \r\n</div>\r\n-->","import { Castle } from './game/castle';\r\n\r\nexport class Player {\r\n    money: number;\r\n    income: number;\r\n    incomePrice: number;\r\n    healthPrice: number;\r\n\r\n    castle: Castle;\r\n    side: number;\r\n\r\n    constructor(money: number, income: number, incomePrice: number, healthPrice: number, side: number, castle: Castle) {\r\n        this.money = money;\r\n        this.income = income;\r\n        this.incomePrice = incomePrice;\r\n        this.healthPrice = healthPrice;\r\n        this.side = side;\r\n        this.castle = castle;\r\n    }\r\n\r\n    public updatePlayer(data, id: number) {\r\n        if (typeof data[id] == 'undefined')\r\n            return;\r\n        \r\n        this.money = data[id].money;\r\n        this.income = data[id].income;\r\n        this.incomePrice = data[id].incomePrice;\r\n        this.healthPrice = data[id].healthPrice;\r\n        this.side = data[id].side;\r\n        this.castle = Castle.parseCastle(data[id].castle);\r\n    }\r\n    public static parsePlayer(data, id: number): Player {\r\n        return new Player(data[id].money, data[id].income, data[id].incomePrice, data[id].healthPrice, data[id].side, Castle.parseCastle(data[id].castle));\r\n    }\r\n}","export class CollisionEffect {\r\n    stance: string;\r\n    type: string;\r\n    color: string;\r\n\r\n    icon: HTMLImageElement;\r\n    attackEffect: HTMLImageElement;\r\n\r\n    constructor(stance: string, collisionType: number, color: string) {\r\n        this.stance = stance;\r\n        if (collisionType == 2) \r\n            this.type = \"mitigated\";\r\n        else\r\n            this.type = \"enhanced\";\r\n        this.color = color;\r\n\r\n        this.icon = new Image();\r\n        if (this.stance == \"attack\") {\r\n            this.icon.src = \"../assets/img/collisions/swords/\" + this.color + \" sword.png\";\r\n            this.attackEffect = new Image();\r\n            this.attackEffect.src = \"../assets/img/collisions/swords/\" + this.type + \".png\";\r\n        } \r\n        if (this.stance == \"defend\") {\r\n            this.icon.src = \"../assets/img/collisions/shields/\" + this.color + \" shield \" + this.type + \".png\";\r\n        }\r\n    }\r\n\r\n    draw = (context, x: number, y: number) => {\r\n        if (this.stance == \"attack\") {\r\n            context.drawImage(this.icon, x, y);\r\n            context.drawImage(this.attackEffect, x, y + 15);\r\n        }\r\n        if (this.stance == \"defend\") {\r\n            context.drawImage(this.icon, x + 30, y);\r\n        }\r\n    }\r\n\r\n    public static parseCollisionEffect(data): CollisionEffect {\r\n        return new CollisionEffect(data.stance, data.collisionType, data.color);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { GameService } from 'src/services/game.service';\r\nimport { Router } from '@angular/router';\r\nimport { Cloud } from '../cloud';\r\n\r\n@Component({\r\n  selector: 'app-level-select',\r\n  templateUrl: './level-select.component.html',\r\n  styleUrls: ['./level-select.component.css']\r\n})\r\nexport class LevelSelectComponent implements OnInit {\r\n  team = \"white\";\r\n  id = 1;\r\n  side = 1;\r\n\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  background: HTMLImageElement;\r\n  clouds: Cloud[];\r\n  nextCloud: number;\r\n\r\n  constructor(private gameServices: GameService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    var levels = document.getElementsByClassName(\"level\");\r\n    \r\n    for (var i = 0; i < levels.length; i++) {\r\n      levels[i].addEventListener(\"click\", (e) => {\r\n        var level = <HTMLElement> e.target;\r\n        this.id = Number(level.innerText);\r\n\r\n        for (var i = 0; i < levels.length; i++)\r\n          levels[i].classList.remove(\"selected\");\r\n        level.classList.add(\"selected\");\r\n      });\r\n    }\r\n\r\n    var modal = document.getElementById(\"instruction-modal\");\r\n    var open = document.getElementById(\"instructions\");\r\n    var close = <HTMLElement>document.getElementsByClassName(\"close\")[0];\r\n\r\n    this.canvas = <HTMLCanvasElement> document.getElementById(\"background-canvas\");\r\n    this.context = this.canvas.getContext(\"2d\");\r\n\r\n    this.background = new Image();\r\n    this.background.src = \"../../assets/img/background/background default.png\";\r\n\r\n    this.clouds = [\r\n      new Cloud(100),\r\n      new Cloud(600),\r\n      new Cloud(900),\r\n      new Cloud(1300),\r\n    ];\r\n    this.nextCloud = Math.floor(Math.random() * 25);\r\n\r\n    open.onclick = function() {\r\n      modal.style.display = \"block\";\r\n    }\r\n\r\n    close.onclick = function() {\r\n      modal.style.display = \"none\";\r\n    }\r\n\r\n    window.onclick = function(event) {\r\n      if (event.target == modal) {\r\n          modal.style.display = \"none\";\r\n      }\r\n    }\r\n\r\n    this.draw_background();\r\n  }\r\n\r\n  checkGame = async() => {\r\n    document.getElementById(\"start\").addEventListener(\"click\", () => {});\r\n    this.updateTeam();\r\n    this.id = await this.gameServices.getLevelID(this.id);\r\n    this.router.navigate([\"../game/\", this.id, this.team, this.side]);\r\n  }\r\n  updateTeam = () => {\r\n    this.team = document.getElementsByClassName(\"selected\")[1].id;\r\n  }\r\n\r\n  draw_background = () => {\r\n    if (this.nextCloud > 0)\r\n      this.nextCloud--;\r\n    else {\r\n      this.nextCloud = Math.floor(Math.random() * 40);\r\n      this.clouds.push(new Cloud());\r\n    }\r\n    \r\n    this.context.drawImage(this.background, 0, 0);\r\n\r\n    if (typeof this.clouds != 'undefined')\r\n      this.clouds.forEach((cloud) => {\r\n        cloud.draw(this.context);\r\n      });\r\n\r\n    setTimeout(this.draw_background, 100);\r\n  }\r\n}\r\n","<canvas id=\"background-canvas\" width=\"1500\" height=\"500\"></canvas>\r\n<div id=\"main-view\">\r\n    <h2>Choose your level!</h2>\r\n    <div id=\"level-select\">\r\n        <div class=\"level selected\">1</div>\r\n        <div class=\"level\">2</div>\r\n        <div class=\"level\">3</div>\r\n        <div class=\"level\">4</div>\r\n        <div class=\"level\">5</div>\r\n        <div class=\"level\">6</div>\r\n        <div class=\"level\">7</div>\r\n        <div class=\"level\">8</div>\r\n    </div>\r\n\r\n    <app-team-select></app-team-select>\r\n\r\n    <button (click)=\"checkGame()\" id=\"start\">Start Game!</button>\r\n</div>\r\n<div id=\"footer\">\r\n    <div id=\"footer-button-container\">\r\n        <button id=\"back\" [routerLink]=\"['']\">Back to Main Menu</button>\r\n        <button id=\"instructions\">Instructions</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Instructions Modal -->\r\n<div id=\"instruction-modal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <span class=\"close\">&times;</span>\r\n        <h1 class=\"modal-header\">Instructions:</h1>\r\n        <p>This is a castle defense game, the aim of the game is to power up and purchase units to attack the enemy castle while keeping your own castle safe!</p>\r\n        <br/>\r\n        <h1 class=\"modal-header\">Singleplayer:</h1>\r\n        <p>Choose your favorite team and battle against a variety of opponents in 8 different levels who will send units at you in a pre-defined pattern!</p>\r\n        <p>Be careful though! The levels get difficult very quickly!</p>\r\n        <br/>\r\n        <h1 class=\"modal-header\">Multiplayer:</h1>\r\n        <p>Pit your best strategies against your friends in a 2-player battle!</p>\r\n        <p>Create a new game and you will be assigned a random Game ID!</p>\r\n        <p>Once you have your ID, your friend will be able to join your game and the battle begins!</p>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-typeinfo',\r\n  templateUrl: './typeinfo.component.html',\r\n  styleUrls: ['./typeinfo.component.css']\r\n})\r\nexport class TypeinfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    var modal = document.getElementById(\"instruction-modal\");\r\n    var open = document.getElementById(\"instructions\");\r\n    var close = <HTMLElement>document.getElementsByClassName(\"close\")[0];\r\n\r\n    close.onclick = function() {\r\n      modal.style.display = \"none\";\r\n    }\r\n\r\n    window.onclick = function(event) {\r\n      if (event.target == modal) {\r\n          modal.style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div id=\"type-info-view\">\r\n\r\n</div>\r\n<div id=\"footer\">\r\n    <div id=\"footer-button-container\">\r\n        <button id=\"back\" [routerLink]=\"['']\">Back to Main Menu</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Instructions Modal -->\r\n<div id=\"instruction-modal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <span class=\"close\">&times;</span>\r\n        <h1 class=\"modal-header\">Type Effects:</h1>\r\n        <p>In the game each unit is a member of a colored team, but will attack with a specific type of attack.</p>\r\n        <p>A unit does not necessarily attack with the same type of damage as its team!</p>\r\n        <p>Different teams are strong or weak against attacks of different types, so knowing these effects can be a great asset in battle!</p>\r\n        <p>Some Attack types do bonus damage to towers as well, while other teams will gain a bonus to the HP of their castle at the beginning of the game!</p>\r\n        <p>This page lists all the type effects in the game.</p>\r\n        <h1 class=\"modal-header\">Legend:</h1>\r\n        <p>Colors on the left side of an arrow are attacking colors</p>\r\n        <p>Colors on the right side of an arrow are defending colors</p>\r\n        <p>A normal arrow denotes a type ADVANTAGE (enhanced damage)</p>\r\n        <p>An X'd arrow denotes a type DISADVANTAGE (mitigated damage)</p>\r\n    </div>\r\n</div>","import { CollisionEffect } from './collisioneffect';\r\n\r\nexport class Unit {\r\n    name: string;\r\n    side: number;\r\n\r\n    health: number;\r\n    maxHealth: number;\r\n\r\n    x: number;\r\n    y: number;\r\n    size: number;\r\n\r\n    sprite: HTMLImageElement;\r\n\r\n    attackEffect: CollisionEffect;\r\n    defendEffect: CollisionEffect;\r\n\r\n    constructor(name: string, side: number, health: number, maxHealth: number, size: number, x: number, y = 400, aeffect: CollisionEffect, deffect: CollisionEffect) {\r\n        this.sprite = new Image();\r\n        this.sprite.src = \"../assets/img/units/\" + name + side + \".png\"\r\n\r\n        this.name = name;\r\n        this.side = side;\r\n     \r\n        this.health = health;\r\n        this.maxHealth = maxHealth;\r\n        this.size = size;\r\n        \r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.attackEffect = aeffect;\r\n        this.defendEffect = deffect;\r\n    }\r\n\r\n    draw(context) {\r\n        context.drawImage(this.sprite, this.x, this.y);\r\n\r\n        this.attackEffect.draw(context, this.x, this.y);\r\n        this.defendEffect.draw(context, this.x, this.y);\r\n\r\n        let currentHealth = this.health/this.maxHealth;\r\n        let width = (this.size + 10) * currentHealth;\r\n        if (width < 0)\r\n            width = 0;\r\n\r\n        if (currentHealth > 0.75)\r\n        context.fillStyle = \"green\";\r\n            else if (currentHealth > 0.30)\r\n        context.fillStyle = \"yellow\";\r\n            else if (currentHealth > 0.10)\r\n        context.fillStyle = \"red\";\r\n            else\r\n        context.fillStyle = \"darkred\";\r\n\r\n        context.fillRect(this.x - 5, this.y - 10, width, 5);\r\n    }\r\n\r\n    public static parseUnits(data): Unit[] {\r\n        var units: Unit[];\r\n        units = [];\r\n\r\n        for (var i = 0; i < data.length; i++)\r\n            units.push(\r\n                new Unit(\r\n                    data[i].name,\r\n                    data[i].side,\r\n                    data[i].health,\r\n                    data[i].maxHealth,\r\n                    data[i].size,\r\n                    data[i].x,\r\n                    data[i].y,\r\n                    CollisionEffect.parseCollisionEffect(data[i].attackEffect),\r\n                    CollisionEffect.parseCollisionEffect(data[i].defendEffect)                )\r\n            );\r\n\r\n        return units;\r\n    }\r\n\r\n    public equals = (obj: any): boolean => {\r\n        if (\r\n            this.side == obj.side\r\n            && this.name == obj.name\r\n            && this.maxHealth == obj.maxHealth\r\n            && this.size == obj.size\r\n            && this.x == obj.x\r\n            && this.y == obj.y\r\n        )\r\n            return true;\r\n        return false;\r\n    }\r\n}","<canvas id=\"background-canvas\" width=\"1500\" height=\"500\"></canvas>\r\n<div id=\"main-view\">\r\n    <h1>Multiplayer!</h1>\r\n    <app-team-select></app-team-select>\r\n\r\n    <button (click)=\"newGame()\" id=\"ng\">New Game!</button>\r\n\r\n    <button (click)=\"joinGame()\" class=\"unverified\" id=\"jg\">Join Game!</button>\r\n    <label for=\"game-id\" id=\"game-id-label\"><b>Game ID:</b></label>\r\n    <input type=\"number\" min=\"1000\" max=\"9999\" id=\"game-id\" placeholder=\"----\" name=\"game-id\">\r\n    <button id=\"game-browser\">Game Browser</button>\r\n</div>\r\n<div id=\"footer\">\r\n    <div id=\"footer-button-container\">\r\n        <button id=\"back\" [routerLink]=\"['']\">Back to Main Menu</button>\r\n        <button id=\"instructions\">Instructions</button>\r\n    </div>\r\n</div>\r\n\r\n<!-- Instructions Modal -->\r\n<div id=\"instruction-modal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <span class=\"close\">&times;</span>\r\n        <h1 class=\"modal-header\">Instructions:</h1>\r\n        <p>This is a castle defense game, the aim of the game is to power up and purchase units to attack the enemy castle while keeping your own castle safe!</p>\r\n        <br/>\r\n        <h1 class=\"modal-header\">Singleplayer:</h1>\r\n        <p>Choose your favorite team and battle against a variety of opponents in 8 different levels who will send units at you in a pre-defined pattern!</p>\r\n        <p>Be careful though! The levels get difficult very quickly!</p>\r\n        <br/>\r\n        <h1 class=\"modal-header\">Multiplayer:</h1>\r\n        <p>Pit your best strategies against your friends in a 2-player battle!</p>\r\n        <p>Create a new game and you will be assigned a random Game ID!</p>\r\n        <p>Once you have your ID, your friend will be able to join your game and the battle begins!</p>\r\n    </div>\r\n</div>\r\n\r\n<!-- Browser Modal -->\r\n<div id=\"game-browser-modal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <span class=\"close\">&times;</span>\r\n        <h1 class=\"modal-header\">Game Browser</h1>\r\n        <div *ngIf=\"gameIDs.length == 0; else showGameList\">\r\n            <p>No games are currently in session :/</p>\r\n        </div>\r\n        <ng-template #showGameList>\r\n            <div *ngFor=\"let id of gameIDs\" (click)=\"setId(id)\" class=\"game-browser-item\">\r\n                <span class=\"game-id\">Game: {{id}}</span>\r\n                <span *ngIf=\"allIDsandStates[id] == 1\" class=\"game-state\">Open</span>\r\n                <span *ngIf=\"allIDsandStates[id] == 2\" class=\"game-state\">Full</span>\r\n            </div>\r\n        </ng-template>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Cloud } from '../cloud';\r\nimport { GameService } from 'src/services/game.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-multiplayer',\r\n  templateUrl: './multiplayer.component.html',\r\n  styleUrls: ['./multiplayer.component.css']\r\n})\r\nexport class MultiplayerComponent implements OnInit {\r\n  team = \"white\";\r\n  id = 1000;\r\n  allIDsandStates = {};\r\n  gameIDs = [];\r\n\r\n  canvas: HTMLCanvasElement;\r\n  context: CanvasRenderingContext2D;\r\n  background: HTMLImageElement;\r\n  clouds: Cloud[];\r\n  nextCloud: number;\r\n\r\n  constructor(private router: Router, private gameServices: GameService) { }\r\n\r\n  ngOnInit() {\r\n    this.updateGamesAsync();\r\n\r\n    var instructionModal = document.getElementById(\"instruction-modal\");\r\n    var browserModal = document.getElementById(\"game-browser-modal\");\r\n    var instructionOpen = document.getElementById(\"instructions\");\r\n    var browserOpen = document.getElementById(\"game-browser\");\r\n    var instructionClose = <HTMLElement>document.getElementsByClassName(\"close\")[0];\r\n    var browserClose = <HTMLElement>document.getElementsByClassName(\"close\")[1];\r\n\r\n    this.canvas = <HTMLCanvasElement> document.getElementById(\"background-canvas\");\r\n    this.context = this.canvas.getContext(\"2d\");\r\n\r\n    this.background = new Image();\r\n    this.background.src = \"../../assets/img/background/background default.png\";\r\n\r\n    this.clouds = [\r\n      new Cloud(100),\r\n      new Cloud(600),\r\n      new Cloud(900),\r\n      new Cloud(1300),\r\n    ];\r\n    this.nextCloud = Math.floor(Math.random() * 25);\r\n\r\n    instructionOpen.onclick = () => {\r\n      instructionModal.style.display = \"block\";\r\n    }\r\n    browserOpen.onclick = () => {\r\n      this.updateGamesAsync();\r\n      browserModal.style.display = \"block\";\r\n    }\r\n\r\n    instructionClose.onclick = () => {\r\n      instructionModal.style.display = \"none\";\r\n    }\r\n    browserClose.onclick = () => {\r\n      browserModal.style.display = \"none\";\r\n    }\r\n\r\n    window.onclick = (event) => {\r\n      if (event.target == instructionModal) {\r\n          instructionModal.style.display = \"none\";\r\n      }\r\n      if (event.target == browserModal) {\r\n        browserModal.style.display = \"none\";\r\n      }\r\n    }\r\n\r\n    document.getElementById(\"game-id\").onchange = () => {\r\n      document.getElementById(\"jg\").classList.add(\"unverified\");\r\n    }\r\n\r\n    this.draw_background();\r\n  }\r\n\r\n  updateGamesAsync = async() => {\r\n    var jsonData = await this.gameServices.getAllGameIDsAndStates();\r\n    var obj = <Object>jsonData;\r\n    this.allIDsandStates = obj;\r\n    if (Object.keys(this.allIDsandStates))\r\n      this.gameIDs = Object.keys(this.allIDsandStates);\r\n    else\r\n      this.gameIDs = [];\r\n  }\r\n\r\n  setId = (id: number) => {\r\n    this.id = id;\r\n    document.getElementById(\"game-browser-modal\").style.display = \"none\";\r\n    (<any>document.getElementById(\"game-id\")).value = this.id;\r\n    document.getElementById(\"jg\").classList.remove(\"unverified\");\r\n  }\r\n  updateTeam = () => {\r\n    this.team = document.getElementsByClassName(\"selected\")[0].id;\r\n  }\r\n  getNewId = () => {\r\n    this.id = Math.floor((Math.random() * 9000) + 1000);\r\n    while (this.id in this.allIDsandStates)\r\n      this.id = Math.floor((Math.random() * 9000) + 1000);\r\n  }\r\n  tryId = (): boolean => {\r\n    this.id = <number>(<any>document.getElementById(\"game-id\")).value;\r\n    \r\n    if (this.id < 1000 || this.id > 9999)\r\n      return false;\r\n    if (!(this.id in this.allIDsandStates))\r\n      return false;\r\n    if (this.allIDsandStates[this.id] != 1)\r\n      return false;\r\n    return true;\r\n  }\r\n\r\n  newGame = async() => {\r\n    await this.updateGamesAsync();\r\n    this.getNewId();\r\n    this.updateTeam();\r\n    this.router.navigate([\"../game\", this.id, this.team, 1]);\r\n  }\r\n  joinGame = async() => {\r\n    let side = 2;\r\n    await this.updateGamesAsync();\r\n    if (!this.tryId()) {\r\n      if (this.allIDsandStates[this.id] == 2)\r\n        side = 3;\r\n      else {\r\n        alert(\"The ID entered is invalid! Check to make sure the entered ID is correct.\\n(or it's just a bug lol)\");\r\n        return;\r\n      }\r\n    }\r\n    this.updateTeam();\r\n    this.router.navigate([\"../game\", this.id, this.team, side]);\r\n  }\r\n\r\n  draw_background = () => {\r\n    if (this.nextCloud > 0)\r\n      this.nextCloud--;\r\n    else {\r\n      this.nextCloud = Math.floor(Math.random() * 40);\r\n      this.clouds.push(new Cloud());\r\n    }\r\n    \r\n    this.context.drawImage(this.background, 0, 0);\r\n\r\n    if (typeof this.clouds != 'undefined')\r\n      this.clouds.forEach((cloud) => {\r\n        cloud.draw(this.context);\r\n      });\r\n\r\n    setTimeout(this.draw_background, 100);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n//import { User } from './user';\r\n//import { UserService } from '../services/user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { CharacterService } from '../services/character.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  //public static user: User;\r\n  public static teamMap: Map<string, string[]>;\r\n\r\n\r\n  constructor(private http: HttpClient, private characterServices: CharacterService/*, private userServices: UserService*/) {\r\n    //AppComponent.user = new User(this.userServices);\r\n  }\r\n\r\n  ngOnInit() {\r\n    AppComponent.teamMap = new Map<string, string[]>();\r\n    this.setupTeamMap();\r\n  }\r\n\r\n  setupTeamMap = async() => {\r\n    AppComponent.teamMap.set(\"white\", await this.characterServices.getTeam(\"white\"));\r\n    AppComponent.teamMap.set(\"green\", await this.characterServices.getTeam(\"green\"));\r\n    AppComponent.teamMap.set(\"blue\", await this.characterServices.getTeam(\"blue\"));\r\n    AppComponent.teamMap.set(\"purple\", await this.characterServices.getTeam(\"purple\"));\r\n    AppComponent.teamMap.set(\"yellow\", await this.characterServices.getTeam(\"yellow\"));\r\n    AppComponent.teamMap.set(\"orange\", await this.characterServices.getTeam(\"orange\"));\r\n    AppComponent.teamMap.set(\"red\", await this.characterServices.getTeam(\"red\"));\r\n    AppComponent.teamMap.set(\"black\", await this.characterServices.getTeam(\"black\"));\r\n  }\r\n}","<div id=\"view-container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n  private http: HttpClient;\r\n \r\n  constructor(http: HttpClient) {\r\n    console.log(\"creating game service...\");\r\n    this.http = http;\r\n  }\r\n\r\n  public init(team: string, id: number): Promise<boolean> {\r\n    return this.http.get<boolean>(environment.apiURL + 'api/game/init/' + team + '/' + id).toPromise();\r\n  }\r\n  public play(id: number): Promise<boolean> {\r\n    return this.http.get<boolean>(environment.apiURL + 'api/game/play/' + id).toPromise();\r\n  }\r\n  public end(id: number): Promise<boolean> {\r\n    return this.http.get<boolean>(environment.apiURL + 'api/game/end/' + id).toPromise();\r\n  }\r\n  public getPlayerStats(id: number, player: number):Promise<string> {\r\n    return this.http.get<string>(environment.apiURL + 'api/game/getPlayerStats/' + id + '/' + player).toPromise();\r\n  }\r\n  public getAllGameIDs(): Promise<number[]> {\r\n    return this.http.get<number[]>(environment.apiURL + 'api/game/getallgameids').toPromise();\r\n  }\r\n  public getAllGameIDsAndStates(): Promise<string> {\r\n    return this.http.get<string>(environment.apiURL + 'api/game/getallgameidsandstates').toPromise();\r\n  }\r\n  public getLevelID(id: number): Promise<number> {\r\n    return this.http.get<number>(environment.apiURL + 'api/game/getlevelid/' + id).toPromise();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CharacterBarComponent } from './character-bar/character-bar.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { TeamSelectComponent } from './team-select/team-select.component';\r\nimport { LevelSelectComponent } from './level-select/level-select.component';\r\nimport { MultiplayerComponent } from './multiplayer/multiplayer.component';\r\nimport { CharacterInfoComponent } from './character-info/character-info.component';\r\nimport { TeamInfoComponent } from './team-info/team-info.component';\r\nimport { TypeinfoComponent } from './typeinfo/typeinfo.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    routingComponents,\r\n    CharacterBarComponent,\r\n    WelcomeComponent,\r\n    TeamSelectComponent,\r\n    LevelSelectComponent,\r\n    MultiplayerComponent,\r\n    CharacterInfoComponent,\r\n    TeamInfoComponent,\r\n    TypeinfoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    HTMLCanvasElement,\r\n    HttpClient  \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-team-info',\r\n  templateUrl: './team-info.component.html',\r\n  styleUrls: ['./team-info.component.css']\r\n})\r\nexport class TeamInfoComponent implements OnInit {\r\n  currentTeam: string = \"white\";\r\n  currentUnits: string[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.updateTeam();\r\n    document.getElementById(\"team-info-view\").onmouseup = () => {\r\n      this.updateTeam();\r\n    }\r\n  }\r\n\r\n  updateTeam = () => {\r\n    this.currentTeam = document.getElementsByClassName(\"selected\")[0].id;\r\n    this.currentUnits = AppComponent.teamMap.get(this.currentTeam);\r\n    document.getElementById(\"team-info-view\").style.backgroundColor = \"\"+this.currentTeam;\r\n  }\r\n}\r\n","<div id=\"team-info-view\">\r\n    <h2>Choose a Character to see details on them!</h2>\r\n    <div id=\"character-select-bar\">\r\n        <div *ngFor=\"let unit of currentUnits\" style=\"display: inline-block; margin: 10px;\">\r\n            <a [routerLink]=\"['../characterinfo', currentTeam, unit]\">\r\n                <img src=\"../../assets/img/icons/{{unit}} icon.png\">\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <app-team-select></app-team-select>\r\n</div>\r\n<div id=\"footer\">\r\n    <div id=\"footer-button-container\">\r\n        <button id=\"back\" [routerLink]=\"['']\">Back to Main Menu</button>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment';\r\n\r\nexport class ShopService {\r\n  private http: HttpClient;\r\n\r\n  constructor(http: HttpClient) {\r\n    this.http = http;\r\n  }\r\n\r\n  public buy(id: number, player: number, unit: string): Promise<boolean> {\r\n    return this.http.get<boolean>(environment.apiURL + 'api/game/buy/' + id + '/' + player + '/' + unit).toPromise();\r\n  }\r\n\r\n  public getNewIncomePrice(id: number, player: number): Promise<number> {\r\n    return this.http.get<number>(environment.apiURL + 'api/game/incomeprice/' + id + '/' + player).toPromise();\r\n  } \r\n  public getNewHealthPrice(id: number, player: number): Promise<number> {\r\n    return this.http.get<number>(environment.apiURL + 'api/game/healthprice/' + id + '/' + player).toPromise();\r\n  } \r\n}","import { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { CharacterInfo } from './characterInfo';\r\nimport { AppComponent } from '../app.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CharacterService } from '../../services/character.service';\r\n\r\n@Component({\r\n  selector: 'app-character-info',\r\n  templateUrl: './character-info.component.html',\r\n  styleUrls: ['./character-info.component.css']\r\n})\r\nexport class CharacterInfoComponent implements OnInit, OnChanges {\r\n  team: string = \"white\";\r\n  name: string = \"doggo\";\r\n  \r\n  character: CharacterInfo = new CharacterInfo(\"white\", \"unknown\", this.characterServices);\r\n  fullTeam: any;\r\n  next: string = \"doggo\";\r\n  prev: string = \"doggo\";\r\n  \r\n  constructor(private route: ActivatedRoute, private characterServices: CharacterService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(map => {\r\n      var mapParams = <any> map;\r\n      this.team = mapParams.params.team;\r\n      this.name = mapParams.params.name;\r\n\r\n      this.character = new CharacterInfo(this.team, this.name, this.characterServices);\r\n\r\n      this.fullTeam = AppComponent.teamMap.get(this.team);\r\n      var index = this.fullTeam.indexOf(this.name);\r\n      this.next = this.fullTeam[(index+1)%8];\r\n      if (index == 0)\r\n        this.prev = this.fullTeam[7];\r\n      else\r\n        this.prev = this.fullTeam[index-1];\r\n\r\n      document.getElementById(\"main-view\").style.backgroundColor = this.team;\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    \r\n  }\r\n}\r\n","<div id=\"main-view\">\r\n    <div>\r\n        <h1>{{ character.name }}</h1>\r\n    </div>\r\n    <div class=\"info-container\">\r\n        <div class=\"image\" style=\"float: left; margin: 0px; width: 200px;\">\r\n            <img src=\"../../assets/img/units/{{name}}1.png\">\r\n        </div>\r\n        <div class=\"info\">\r\n            <div id=\"info-headers\">\r\n                Name:<br/>\r\n                Team:<br/>\r\n                Damage:<br/>\r\n                Damage Type:<br/>\r\n                Health:<br/>\r\n                Speed:<br/>\r\n                Description:<br/>\r\n            </div>\r\n            <div id=\"info-values\">\r\n                {{character.name}}<br/>\r\n                {{character.team}}<br/>\r\n                {{character.damage}}<br/>\r\n                {{character.type}} <div id=\"damage-type\"></div><br/>\r\n                {{character.health}}<br/>\r\n                {{character.speed}}<br/>\r\n                {{character.description}}<br/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"footer\">\r\n    <div id=\"footer-content\">\r\n        <a class=\"image-link\" [routerLink]=\"['/characterinfo/', team, prev]\">\r\n            <img id=\"prev-info\" src=\"../../assets/img/icons/{{prev}} icon.png\">\r\n        </a>\r\n        <button id=\"back\" [routerLink]=\"['/teaminfo']\">Back to Team View</button>\r\n        <a class=\"image-link\" [routerLink]=\"['/characterinfo/', team, next]\">\r\n            <img id=\"next-info\" src=\"../../assets/img/icons/{{next}} icon.png\">\r\n        </a>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Unit } from './unit';\r\nimport { Player } from '../player';\r\nimport { Castle } from './castle'\r\n\r\nimport { GameService } from '../../services/game.service';\r\n\r\nimport { HubConnectionBuilder } from '@aspnet/signalr';\r\nimport { Cloud } from '../cloud';\r\nimport { CharacterBarComponent } from '../character-bar/character-bar.component';\r\n//import { AppComponent } from '../app.component';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css', '../character-bar/character-bar.component.css']\r\n})\r\n\r\nexport class GameComponent implements OnInit, AfterViewInit {\r\n  public id: number;\r\n  public team: string;\r\n  public side: number;\r\n\r\n  private canvas: HTMLCanvasElement;\r\n  private context: CanvasRenderingContext2D;\r\n  private background: HTMLImageElement;\r\n\r\n  private units: Unit[];\r\n  private player1: Player;\r\n  private player2: Player;\r\n  private connectedPlayer: Player;\r\n\r\n  private clouds: Cloud[];\r\n  private nextCloud: number;\r\n\r\n  public gameResult: string = \"\";\r\n  public player1Stats: any = {\r\n    TotalIncome: {Item1: \"-\", Item2: \"0\"},\r\n    UnitsBought: {Item1: \"-\", Item2: \"0\"},\r\n    FavoriteUnit: {Item1: \"-\", Item2: \"0\"},\r\n    MostKills: {Item1: \"-\", Item2: \"0\"},\r\n    MostDamage: {Item1: \"-\", Item2: \"0\"},\r\n    MostCastleDamage: {Item1: \"-\", Item2: \"0\"},\r\n  };\r\n  public player2Stats: any = {\r\n    TotalIncome: {Item1: \"-\", Item2: \"0\"},\r\n    UnitsBought: {Item1: \"-\", Item2: \"0\"},\r\n    FavoriteUnit: {Item1: \"-\", Item2: \"0\"},\r\n    MostKills: {Item1: \"-\", Item2: \"0\"},\r\n    MostDamage: {Item1: \"-\", Item2: \"0\"},\r\n    MostCastleDamage: {Item1: \"-\", Item2: \"0\"},\r\n  };\r\n  public player1FavoriteUnitIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player1MostKillsIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player1MostDamageIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player1MostCastleDamageIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player2FavoriteUnitIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player2MostKillsIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player2MostDamageIcon: string = \"../../assets/img/icons/question icon.png\";\r\n  public player2MostCastleDamageIcon: string = \"../../assets/img/icons/question icon.png\";\r\n\r\n  constructor(private route: ActivatedRoute, private gameServices: GameService) { \r\n    this.background = new Image();\r\n    this.background.src = \"../../assets/img/background/background default.png\";\r\n  }\r\n\r\n  @ViewChild(CharacterBarComponent) \r\n    characterbar: CharacterBarComponent;\r\n\r\n  ngOnInit() {\r\n    this.player1 = new Player(0, 0, 0, 0, 0, new Castle(0, 0, \"white\", 0, 0, 0));\r\n    this.player2 = new Player(0, 0, 0, 0, 0, new Castle(0, 0, \"white\", 0, 0, 0));\r\n\r\n    this.route.paramMap.subscribe(map => {\r\n      var mapParams = <any> map;\r\n      this.id = mapParams.params.id;\r\n      this.team = mapParams.params.team;\r\n      this.side = mapParams.params.side;\r\n      if (this.side == 1)\r\n        this.connectedPlayer = this.player1;\r\n      else if (this.side == 2)\r\n        this.connectedPlayer = this.player2;\r\n      else\r\n        this.connectedPlayer = new Player(0, 0, 0, 0, 3, new Castle(0, 0, \"white\", 0, 0, 0));\r\n    });\r\n\r\n    this.clouds = [\r\n      new Cloud(100),\r\n      new Cloud(600),\r\n      new Cloud(900),\r\n      new Cloud(1300),\r\n    ];\r\n    this.nextCloud = Math.floor(Math.random() * 25);\r\n\r\n    this.units = new Array<Unit>();\r\n\r\n    if (this.side == 1)\r\n      this.init();\r\n    else\r\n      this.gameServices.init(this.team, this.id);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let connection = new HubConnectionBuilder()\r\n      .withUrl(\"/gamehub\")\r\n      .build();\r\n\r\n    connection.start().then(() => {\r\n      console.log(\"connected!\");\r\n      connection.invoke(\"connectedto\", this.id);\r\n    });\r\n\r\n    connection.on(\"UpdateUnits\", (unitData) => {\r\n      this.units = Unit.parseUnits(unitData);\r\n      window.requestAnimationFrame(() => this.draw());\r\n    });\r\n    connection.on(\"UpdatePlayers\", (playerData) => {\r\n      this.player1.updatePlayer(playerData, 0);\r\n      this.player2.updatePlayer(playerData, 1);\r\n    });\r\n  \r\n    connection.on(\"EndGame\", async(side) => {\r\n      this.player1Stats = await this.gameServices.getPlayerStats(this.id, 1);\r\n      this.player2Stats = await this.gameServices.getPlayerStats(this.id, 2);\r\n      \r\n      this.player1FavoriteUnitIcon = \"../../assets/img/icons/\" + (<any>this.player1Stats).FavoriteUnit.Item1 + \" icon.png\";\r\n      this.player1MostKillsIcon = \"../../assets/img/icons/\" + (<any>this.player1Stats).MostKills.Item1 + \" icon.png\";\r\n      this.player1MostDamageIcon = \"../../assets/img/icons/\" + (<any>this.player1Stats).MostDamage.Item1 + \" icon.png\";\r\n      this.player1MostCastleDamageIcon = \"../../assets/img/icons/\" + (<any>this.player1Stats).MostCastleDamage.Item1 + \" icon.png\";\r\n      this.player2FavoriteUnitIcon = \"../../assets/img/icons/\" + (<any>this.player2Stats).FavoriteUnit.Item1 + \" icon.png\";\r\n      this.player2MostKillsIcon = \"../../assets/img/icons/\" + (<any>this.player2Stats).MostKills.Item1 + \" icon.png\";\r\n      this.player2MostDamageIcon = \"../../assets/img/icons/\" + (<any>this.player2Stats).MostDamage.Item1 + \" icon.png\";\r\n      this.player2MostCastleDamageIcon = \"../../assets/img/icons/\" + (<any>this.player2Stats).MostCastleDamage.Item1 + \" icon.png\";\r\n\r\n      if (side == this.side) {\r\n        this.gameResult = \"VICTORY\";\r\n        document.getElementById(\"endgame-modal-content\").style.backgroundColor = \"#ccffcc\";\r\n      }\r\n      else if (this.side > 2)\r\n        this.gameResult = \"PLAYER \" + side + \" WINS\";\r\n      else {\r\n        this.gameResult = \"DEFEAT\";\r\n        document.getElementById(\"endgame-modal-content\").style.backgroundColor = \"#ffcccc\";\r\n      }\r\n\r\n      document.getElementById(\"endgame-modal\").style.display = \"block\";\r\n    });\r\n\r\n    connection.onclose(() => {\r\n      if (this.side >= 3)\r\n        return;\r\n      document.getElementById(\"endgame-modal\").style.display = \"none\";      \r\n      this.gameServices.end(this.id);\r\n      this.reset();\r\n      delete(this.gameServices);\r\n    });\r\n\r\n    this.canvas = <HTMLCanvasElement> document.getElementById(\"game-canvas\");\r\n    this.context = this.canvas.getContext(\"2d\");\r\n    var menuButton = document.getElementById(\"main-menu\");\r\n    menuButton.onmouseup = () => {\r\n      connection.stop();\r\n    }\r\n\r\n    connection.on(\"AddCooldown\", (side, name) => {\r\n      if (this.connectedPlayer.side != side)\r\n        return;\r\n      this.characterbar.addCooldown(name);\r\n    });\r\n    connection.on(\"RemoveCooldown\", (side, name) => {\r\n      if (this.connectedPlayer.side != side)\r\n        return;\r\n      this.characterbar.removeCooldown(name);\r\n    })\r\n  }\r\n\r\n  public init = async() => {\r\n    await this.gameServices.init(this.team, this.id);\r\n\r\n    if (this.id < 1000 || this.id > 10000)\r\n      this.start();\r\n    else\r\n      this.waitForPlayer2();\r\n  }\r\n\r\n  public waitForPlayer2 = async() => {\r\n    this.draw_background(false);\r\n\r\n    if (this.player2.income < 0.01)\r\n      setTimeout(this.waitForPlayer2, 250);\r\n    else\r\n      this.start();\r\n  }\r\n\r\n  public start = async() => {\r\n    await this.gameServices.play(this.id);\r\n\r\n    window.requestAnimationFrame(() => this.draw());\r\n  }\r\n\r\n  public async draw() {\r\n    var ctx = this.context;\r\n\r\n    this.draw_background();\r\n\r\n    if (typeof this.units != 'undefined')\r\n      this.units.forEach((unit) => {\r\n        unit.draw(ctx);\r\n      });\r\n  }\r\n\r\n  public draw_background(connected = true) {\r\n    var ctx = this.context;\r\n    \r\n    ctx.drawImage(this.background, 0, 0)\r\n\r\n    if (typeof this.clouds != 'undefined')\r\n      this.clouds.forEach((cloud) => {\r\n        cloud.draw(ctx);\r\n      });\r\n    if (this.nextCloud > 0)\r\n      this.nextCloud--;\r\n    else {\r\n      this.nextCloud = Math.floor(Math.random() * 50);\r\n      this.clouds.push(new Cloud());\r\n    }\r\n    \r\n    if (this.side < 3) {\r\n      ctx.fillStyle = \"black\";\r\n      ctx.font = \"50px serif\";\r\n      ctx.fillText(\"Money: $\" + Math.floor(this.connectedPlayer.money), 10, 45);\r\n      ctx.font = \"14px serif\";\r\n      ctx.fillText(\"Income: $\" + Math.floor(this.connectedPlayer.income * 600) + \"/min\", 12, 60);\r\n      if (this.id >= 1000) {\r\n        ctx.font = \"14px serif\";\r\n        ctx.fillText(\"Game ID: \" + this.id, 1410, 15);\r\n      }\r\n    }\r\n\r\n    if (connected) {\r\n      this.player1.castle.draw(ctx);\r\n      this.player2.castle.draw(ctx);\r\n    }\r\n  }\r\n\r\n  reset = () => {\r\n    this.player1 = new Player(0, 0, 0, 0, 0, new Castle(0, 0, \"white\", 0, 0, 0));\r\n    this.player2 = new Player(0, 0, 0, 0, 0, new Castle(0, 0, \"white\", 0, 0, 0));\r\n    this.units = new Array<Unit>();\r\n\r\n    this.route.paramMap.subscribe(map => {\r\n      var mapParams = <any> map;\r\n      this.id = mapParams.params.id;\r\n      this.team = mapParams.params.team;\r\n      this.side = mapParams.params.side;\r\n      if (this.side == 1)\r\n        this.connectedPlayer = this.player1;\r\n      else if (this.side == 2)\r\n        this.connectedPlayer = this.player2;\r\n      else\r\n        this.connectedPlayer = new Player(0, 0, 0, 0, 3, new Castle(0, 0, \"white\", 0, 0, 0));\r\n    });\r\n\r\n    document.getElementById(\"main-menu\").style.display = \"none\";\r\n  }\r\n}\r\n","<script src=\"~/lib/signalr/signalr.js\"></script>\r\n\r\n<canvas id=\"game-canvas\" width=\"1500\" height=\"500\"></canvas>\r\n\r\n<app-character-bar [side]=\"side\" [team]=\"team\" [id]=\"id\" id=\"footer\"></app-character-bar>\r\n\r\n<!-- Endgame Modal -->\r\n<div id=\"endgame-modal\" class=\"modal\">\r\n    <div class=\"modal-content\" id=\"endgame-modal-content\">\r\n        <div id=\"endgame-header\">\r\n            <h1>{{ gameResult }}</h1>\r\n        </div>\r\n        <div id=\"endgame-stats\">\r\n            <div id=\"player1-stats\">\r\n                <h2>Player 1:</h2>\r\n                <table>\r\n                    <tr>\r\n                        <td>Total Income:</td>\r\n                        <td>{{ player1Stats.TotalIncome.Item2 }}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Units Bought:</td>\r\n                        <td>{{ player1Stats.UnitsBought.Item2 }}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr class=\"contains-icon\">\r\n                        <td>Favorite Unit:</td>\r\n                        <td>{{ player1Stats.FavoriteUnit.Item2 }}</td>\r\n                        <td>\r\n                            <img src=\"{{player1FavoriteUnitIcon}}\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"contains-icon\">\r\n                        <td>Most Damage:</td>\r\n                        <td>{{ player1Stats.MostDamage.Item2 }}</td>\r\n                        <td>\r\n                            <img src=\"{{player1MostDamageIcon}}\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"contains-icon\">\r\n                        <td>Most Castle Damage:</td>\r\n                        <td>{{ player1Stats.MostCastleDamage.Item2 }}</td>\r\n                        <td>\r\n                            <img src=\"{{player1MostCastleDamageIcon}}\"/>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <div id=\"player2-stats\">\r\n                <h2>Player 2:</h2>\r\n                <table>\r\n                    <tr>\r\n                        <td>Total Income:</td>\r\n                        <td>{{ player2Stats.TotalIncome.Item2 }}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Units Bought:</td>\r\n                        <td>{{ player2Stats.UnitsBought.Item2 }}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr class=\"contains-icon\">\r\n                        <td>Favorite Unit:</td>\r\n                        <td>{{ player2Stats.FavoriteUnit.Item2 }}</td>\r\n                        <td>\r\n                            <img src=\"{{player2FavoriteUnitIcon}}\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"contains-icon\">\r\n                        <td>Most Damage:</td>\r\n                        <td>{{ player2Stats.MostDamage.Item2 }}</td>\r\n                        <td>\r\n                            <img src=\"{{player2MostDamageIcon}}\"/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr class=\"contains-icon\">\r\n                        <td>Most Castle Damage:</td>\r\n                        <td>{{ player2Stats.MostCastleDamage.Item2 }}</td>\r\n                        <td>\r\n                            <img src=\"{{player2MostCastleDamageIcon}}\"/>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div id=\"endgame-button\">\r\n            <button [routerLink]=\"['/']\" id=\"main-menu\">Main Menu</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-team-select',\r\n  templateUrl: './team-select.component.html',\r\n  styleUrls: ['./team-select.component.css']\r\n})\r\nexport class TeamSelectComponent implements OnInit {\r\n\r\n  team = \"white\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    var teams = document.getElementsByClassName(\"team\");\r\n    \r\n    for (var i = 0; i < teams.length; i++) {\r\n      teams[i].addEventListener(\"mouseup\", (e) => {\r\n        var team = <HTMLElement> e.target;\r\n        for (var i = 0; i < teams.length; i++)\r\n          teams[i].classList.remove(\"selected\");\r\n        team.classList.add(\"selected\");\r\n      });\r\n    }\r\n  }\r\n}","<h2>Choose your team!</h2>\r\n<div id=\"team-select\">\r\n    <div class=\"team selected\" id=\"white\"></div>\r\n    <div class=\"team\" id=\"green\"></div>\r\n    <div class=\"team\" id=\"blue\"></div>\r\n    <div class=\"team\" id=\"purple\"></div>\r\n    <div class=\"team\" id=\"yellow\"></div>\r\n    <div class=\"team\" id=\"orange\"></div>\r\n    <div class=\"team\" id=\"red\"></div>\r\n    <div class=\"team\" id=\"black\"></div>\r\n</div>\r\n","export class Cloud {\r\n    x: number;\r\n    y: number;\r\n    speed: number;\r\n    image: HTMLImageElement;\r\n\r\n    constructor(x?: number) {\r\n        if (x)\r\n            this.x = x;\r\n        else\r\n            this.x = 1500;\r\n\r\n        this.y = Math.floor(Math.random() * 150);\r\n        this.speed = Math.floor(Math.random() * (12 - 2) + 2);\r\n\r\n        var id = Math.floor(Math.random() * (4 - 1) + 1);\r\n        this.image = new Image();\r\n        this.image.src = \"../../assets/img/background/clouds/cloud\" + id + \".png\";\r\n    }\r\n\r\n    draw = (ctx: CanvasRenderingContext2D) => {\r\n        ctx.drawImage(this.image, this.x, this.y);\r\n        this.x -= this.speed;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { GameComponent } from './game/game.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { LevelSelectComponent } from './level-select/level-select.component';\r\nimport { MultiplayerComponent } from './multiplayer/multiplayer.component';\r\nimport { TeamInfoComponent } from './team-info/team-info.component';\r\nimport { TypeinfoComponent } from './typeinfo/typeinfo.component';\r\nimport { CharacterInfoComponent } from './character-info/character-info.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"game/:id/:team/:side\", component: GameComponent },\r\n  { path: \"levelselect\", component: LevelSelectComponent },\r\n  { path: \"multiplayer\", component: MultiplayerComponent },\r\n  { path: \"game/10000\", component: MultiplayerComponent },\r\n  { path: \"teaminfo\", component: TeamInfoComponent },\r\n  { path: \"typeinfo\", component: TypeinfoComponent },\r\n  { path: \"characterinfo/:team/:name\", component: CharacterInfoComponent },\r\n  { path: \"\", component: WelcomeComponent },\r\n  { path: \"**\", component: WelcomeComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const routingComponents = [ \r\n  GameComponent, \r\n  WelcomeComponent, \r\n  LevelSelectComponent,\r\n  MultiplayerComponent,\r\n  TeamInfoComponent,\r\n  TypeinfoComponent,\r\n  CharacterInfoComponent\r\n];\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}